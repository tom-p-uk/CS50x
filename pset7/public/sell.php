<?php
    // configuration
    require("../includes/config.php");

    // if user reached page via GET (as by clicking a link or via redirect)
    if ($_SERVER["REQUEST_METHOD"] == "GET")
    {


        // run query for any shares in portfolio table that belong to the user
        $rows = CS50::query("SELECT symbol, shares FROM portfolios WHERE user_id = ?", $_SESSION["id"]);
        
        //validate $rows
        if ($rows == [])
        {
            apologize("You don't have any stocks that you can sell right now. You'll have to buy some before you can sell them.");
        }
    
        // loop through rows, calling lookup each iteration and adding all data to new associative arrray
        $positions = [];
        foreach ($rows as $row)
        {
            $stock = lookup($row["symbol"]);
            if ($stock !== false)
            {
                $positions[] = [
                    "name" => $stock["name"],
                    "price" => $stock["price"],
                    "shares" => $row["shares"],
                    "symbol" => $row["symbol"]
                ];
            }
        }
    
        // render sell_form
        render("sell_form.php", ["title" => "Sell", "positions" => $positions]);
    }
    
    // else if user reached page via POST (as by submitting a form via POST)
    else if ($_SERVER["REQUEST_METHOD"] == "POST")
    {


        // use lookup function to check price of stock
        $stock = lookup($_POST["dropdown"]);
        
        // use query to get retrieve array containing number of those shares currently held by user
        $rows = CS50::query("SELECT shares FROM portfolios WHERE user_id = ? AND symbol = ?", $_SESSION["id"], $_POST["dropdown"]);
        
        // store number of those shares in a separate variable
        $noOfShares = $rows[0]["shares"];
        
        // also store name of company in a variable
        $companyName = $stock["name"];
        
        // calculate money generated by sale of stock
        $moneyOwed = $noOfShares * $stock["price"];
            
        // query user's cash balance and add the money from the sale to it
        $existingBalance = cs50::query("SELECT cash FROM users WHERE id = ?", $_SESSION["id"]);
        $newBalance = $existingBalance[0]["cash"] + $moneyOwed;
        
        // format numbers to ensure 2 decimal places after the 0
        $moneyOwedFormatted = number_format($moneyOwed, 2, '.', '');
        $newBalanceFormatted = number_format($newBalance, 2, '.', '');

        // update table with new cash figure
         cs50::query("UPDATE users SET cash = ? WHERE id = ?", $newBalance, $_SESSION["id"]);
         
        // remove stocks from portfolios table
        cs50::query("DELETE FROM portfolios WHERE user_id = ? AND symbol = ?", $_SESSION["id"], $_POST["dropdown"]);
        
        // add transaction to history table
        $transactionType = "Sale";
        cs50::query("INSERT INTO history (user_id, type, symbol, name, shares, price) VALUES(?, ?, ?, ?, ?, ?)", $_SESSION["id"], $transactionType, $stock["symbol"], $stock["name"], $noOfShares, $stock["price"]);
        
        // render sell
        render("sell.php", ["title" => "Sell", "stock" => $stock, "noOfShares" => $noOfShares, "companyName" => $companyName, "moneyOwedFormatted" => $moneyOwedFormatted, "newBalanceFormatted" => $newBalanceFormatted]);

    }
?>
